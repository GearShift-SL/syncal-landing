---
import PageLayout from '~/layouts/PageLayout.astro';
---

<PageLayout
  metadata={{
    title: 'Contact us',
    description:
      'Contact us for any questions about our platform.',
  }}
>
  <section class="w-full py-16 px-4 bg-gradient-to-b from-transparent to-blue-100">
    <div class="max-w-3xl mx-auto">
      <div class="text-center mb-12">
        <h1 class="text-5xl font-medium leading-tight mb-6">
          Contact <span class="text-primary">us</span>
        </h1>
        <p class="text-base md:text-lg text-gray-800 max-w-3xl mx-auto">
          We are here to help you. Fill out the form and we will get in touch with you as soon as possible.
        </p>
      </div>

      <div class="bg-white rounded-lg shadow-lg p-8">
        <form id="contact-form" class="space-y-6">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Your name"
            />
          </div>

          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="your@email.com"
            />
          </div>

          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message</label>
            <textarea
              id="message"
              name="message"
              rows="5"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="What can we help you with?"></textarea>
          </div>

          <div>
            <button type="submit" class="cta-gradient w-full">Send message</button>
          </div>

          <div id="form-status" class="text-center hidden">
            <p id="success-message" class="text-green-600 hidden">
              Thank you for your message! We will get in touch with you soon.
            </p>
            <p id="error-message" class="text-red-600 hidden">
              An error occurred while sending the message. Please try again.
            </p>
          </div>
        </form>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contact-form') as HTMLFormElement;
      const formStatus = document.getElementById('form-status');
      const successMessage = document.getElementById('success-message');
      const errorMessage = document.getElementById('error-message');

      if (form && formStatus && successMessage && errorMessage) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();

          // Get form data
          const formData = new FormData(form);
          const data = {
            contact_list_name: 'syncal_contact',
            name: formData.get('name'),
            email: formData.get('email'),
            message: formData.get('message'),
          };

          console.log('Data', data);

          try {
            // Send data to API endpoint
            const response = await fetch('https://waitlist.hlab.es/contact/messages/', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data),
            });

            // Show appropriate message based on response
            formStatus.classList.remove('hidden');

            if (response.ok) {
              // Show success message
              successMessage.classList.remove('hidden');
              errorMessage.classList.add('hidden');
              form.reset();
            } else {
              // Show error message
              errorMessage.classList.remove('hidden');
              successMessage.classList.add('hidden');

              // Log more detailed error information
              const errorText = await response.text().catch(() => 'No response text');
              console.error('Error submitting form:', {
                status: response.status,
                statusText: response.statusText,
                responseText: errorText,
              });
            }
          } catch (error) {
            // Show error message
            formStatus.classList.remove('hidden');
            errorMessage.classList.remove('hidden');
            successMessage.classList.add('hidden');
            console.error('Error submitting form:', error);
          }
        });
      }
    });
  </script>
</PageLayout>
